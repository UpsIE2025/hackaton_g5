services:
  publisher:
    build:
      context: ../publisher
    container_name: publisher
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - redis
    environment:
      - PORT=8080
      - PREFIX=/api
      - KAFKA_HOST=broker
      - KAFKA_PORT=9092
      - KAFKA_POINT_TO_POINT=point-to-point-topic
      - REDIS_HOST=broker
      - REDIS_PORT=6379
    networks:
      - default

  receiver_one:
    build:
      context: ../receiver
    container_name: receiver-one
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - redis
    environment:
      - PORT=8080
      - KAFKA_HOST=broker
      - KAFKA_PORT=9092
      - KAFKA_GROUP_ID=point-to-point-group
      - KAFKA_POINT_TO_POINT=point-to-point-topic
      - REDIS_HOST=broker
      - REDIS_PORT=6379
    networks:
      - default

  receiver_two:
    build:
      context: ../receiver
    container_name: receiver-two
    ports:
      - "8083:8080"
    depends_on:
      - kafka
      - redis
    environment:
      - PORT=8080
      - KAFKA_HOST=broker
      - KAFKA_PORT=9092
      - KAFKA_GROUP_ID=point-to-point-group
      - KAFKA_POINT_TO_POINT=point-to-point-topic
      - REDIS_HOST=broker
      - REDIS_PORT=6379
    networks:
      - default

  kafka:
    image: apache/kafka:latest
    container_name: broker
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - default

  redis:
    image: redis:latest
    container_name: redis-broker
    ports:
      - "6379:6379"
    networks:
      - default

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - default

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"